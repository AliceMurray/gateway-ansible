# An ansible playbook to start the appropriate containers on a iot-gateway

# Host dependencies:
#  - install ansible,
#  - create and copy ssh key
#  - run playbook with appropriate parameters
#    i.e. ansible-playbook -e "mqttuser= mqttpass= mqtthost= mqttport= gitci= tag= ansible_python_interpreter=/usr/bin/python3" -i targethost, iot-gateway.yml
#    where tag is the default docker tag (e.g. latest)

# There are Ansible tags below for the following gateway personalities
#
# gateway - start default containers for the gateway
#  + minimal mosquitto broker (local mqtt port on 1883, websocket port on 9001)
#  + nginx-http-proxy (expects gitci.com IP as hawkbit will run on a different system)
#  + bt-joiner
#  + NGINX CoAP proxy (expects gitci.com IP as Leshan will run on a different system)
#  + CF CoAP-HTTP proxy
# cloud - start containers configured to bridge mqtt data to the cloud
#  + mosquitto configured for use with cloud service (i.e. Bluemix or Cloudmqtt)
#  + nginx-http-proxy (expects gitci.com IP as hawkbit will run on a different system)
#  + bt-joiner
# local - configured to run all services directly on the gateway
#  + minimal mosquitto broker (local mqtt port on 1883, websocket port on 9001)
#  + hawkbit (running on gateway device)
#  + bt-joiner
#  + freeboard
#  + CF CoAP-HTTP proxy
#  + leshan
#
# There are also ansible tags for the individual items;
#   mosquitto-local, mosquitto-cloud, nginx-http-proxy, bt-joiner, freeboard, etc...

# Container Registry login
- hosts: all
  gather_facts: no
  tasks:
  - assert:
      that: ( ansible_version.major == 2 and ansible_version.minor >= 4 ) or ( ansible_version.major > 2 )
      msg: Ansible version 2.4.0 or greater is required.
  - name: Log into container registry
    docker_login:
      registry: "{{ registry|default('hub.docker.com') }}"
      username: "{{ registry_user|default('docker') }}"
      password: "{{ registry_passwd|default('docker') }}"
      email: "{{ registry_email|default('docker@docker.com') }}"
  tags:
    - always

# This task removes all containers
- hosts: all
  gather_facts: no
  tasks:
  - name: Stop and remove containers
    docker_container:
      name: "{{ item }}"
      state: absent
    with_items:
      - mosquitto
      - nginx-http-proxy
      - bt-joiner
      - hawkbit
      - freeboard
      - nginx-coap-proxy
      - cf-proxy-coap-http
      - leshan
  tags:
    - always

# Mosquitto broker, cloudmqtt or IBM bluemix
- hosts: all
  gather_facts: no
  vars:
    mqttconnection: mqtt-generic
  tasks:
  - name: Copy mosquitto config file
    template:
      src: mosquitto.conf
      dest: /home/osf/mosquitto.conf
  - name: Start mosquitto container
    docker_container:
      name: mosquitto
      image: "{{ hub|default('linarotechnologies') }}/mosquitto:{{ tag|default('latest') }}"
      state: started
      recreate: yes
      restart_policy: always
      network_mode: host
      read_only: yes
      volumes:
        - /home/osf/mosquitto.conf:/etc/mosquitto/conf.d/mosquitto.conf
  tags:
    - cloud
    - mosquitto-cloud
    - mosquitto-local
    - gateway
    - demo
    - local

# NGINX HTTP Proxy
- hosts: all
  gather_facts: no
  tasks:
  - name: Copy nginx config file
    copy:
      src: nginx-http-proxy.conf
      dest: /home/osf/nginx-http-proxy.conf
  - name: Start nginx-http-proxy container
    docker_container:
      name: nginx-http-proxy
      image: "{{ hub|default('linarotechnologies') }}/nginx:{{ tag|default('latest') }}"
      state: started
      recreate: yes
      restart_policy: always
      network_mode: host
      read_only: yes
      tmpfs:
        - /var/run
        - /var/cache/nginx
      etc_hosts: { "gitci.com": "{{ gitci }}"}
      volumes:
        - /home/osf/nginx-http-proxy.conf:/etc/nginx/nginx.conf
      command: nginx-debug -g 'daemon off;'
  tags:
    - nginx-http-proxy
    - gateway
    - demo
    - cloud

# Bt-Joiner
- hosts: all
  gather_facts: no
  tasks:
  - name: Copy bluetooth_6lowpand config file
    copy:
      src: bluetooth_6lowpand.conf
      dest: /home/osf/bluetooth_6lowpand.conf
  - name: Start bt-joiner container
    docker_container:
      name: bt-joiner
      image: "{{ hub|default('linarotechnologies') }}/bt-joiner:{{ tag|default('latest') }}"
      state: started
      recreate: yes
      restart_policy: always
      network_mode: host
      privileged: yes
      read_only: yes
      tmpfs:
        - /run
        - /var/run
        - /var/lock
        - /var/log
      volumes:
        - /home/osf/bluetooth_6lowpand.conf:/etc/bluetooth/bluetooth_6lowpand.conf
  tags:
    - bt-joiner
    - demo
    - gateway
    - local
    - cloud

# hawkbit
- hosts: all
  gather_facts: no
  tasks:
  - name: Start hawkbit container (note takes 2-3 minutes to start on some systems)
    docker_container:
      name: hawkbit
      image: "{{ hub|default('linarotechnologies') }}/hawkbit-update-server:{{ tag|default('latest') }}"
      state: started
      recreate: yes
      restart_policy: always
      network_mode: host
      tmpfs:
        - /var/run
        - /var/cache/nginx
  tags:
    - hawkbit
    - local

# Freeboard
- hosts: all
  gather_facts: no
  tasks:
  - name: create dashboard directory
    file: path=/home/osf/dashboards state=directory mode=0755
  - name: Copy default freeboard dashboard
    template:
      src: dashboards/default.json
      dest: /home/osf/dashboards/default.json
  - name: Copy simple freeboard dashboard
    template:
      src: dashboards/simple.json
      dest: /home/osf/dashboards/simple.json
  - name: Start freeboard container
    docker_container:
      name: freeboard
      image: "{{ hub|default('linarotechnologies') }}/freeboard:{{ tag|default('latest') }}"
      state: started
      recreate: yes
      restart_policy: always
      ports:
        - "80:80"
      volumes:
        - /home/osf/dashboards/default.json:/usr/share/nginx/html/default.json
        - /home/osf/dashboards/default.json:/usr/share/nginx/html/dashboard.json
        - /home/osf/dashboards:/usr/share/nginx/html/dashboards
  tags:
    - freeboard
    - demo
    - local

# NGINX CoAP Proxy
- hosts: all
  gather_facts: no
  tasks:
  - name: Copy nginx config file
    copy:
      src: nginx-lwm2m.conf
      dest: /home/osf/nginx-lwm2m.conf
  - name: Start nginx CoAP proxy container
    docker_container:
      name: nginx-coap-proxy
      image: "{{ hub|default('linarotechnologies') }}/nginx:{{ tag|default('latest') }}"
      state: started
      recreate: yes
      restart_policy: always
      network_mode: host
      read_only: yes
      tmpfs:
        - /var/run
        - /var/cache/nginx
      etc_hosts: { "gitci.com": "{{ gitci }}"}
      volumes:
        - /home/osf/nginx-lwm2m.conf:/etc/nginx/nginx.conf
      command: nginx-debug -g 'daemon off;'
  tags:
    - nginx-coap-proxy
    - demo
    - gateway

# CF CoAP-HTTP Proxy
- hosts: all
  gather_facts: no
  tasks:
  - name: Start CF CoAP-HTTP proxy container
    docker_container:
      name: cf-proxy-coap-http
      image: "{{ hub|default('linarotechnologies') }}/cf-proxy-coap-http:{{ tag|default('latest') }}"
      state: started
      recreate: yes
      restart_policy: always
      network_mode: host
      read_only: yes
  tags:
    - cf-proxy-coap-http
    - demo
    - gateway
    - local

# LWM2M Leshan
- hosts: all
  gather_facts: no
  tasks:
  - name: Start LWM2M Leshan container
    docker_container:
      name: leshan
      image: "{{ hub|default('linarotechnologies') }}/leshan:{{ tag|default('latest') }}"
      state: started
      recreate: yes
      restart_policy: always
      network_mode: host
      read_only: yes
      tmpfs:
        - /tmp
      env: { "LESHAN_ARGS": "-wp 8081" }
  tags:
    - leshan
    - local

# Container Registry logout
- hosts: all
  gather_facts: no
  tasks:
  - name: Log out of container registry
    docker_login:
      state: absent
      email: "{{ registry_email|default('docker@docker.com') }}"
  tags:
    - always
